# This is a basic workflow
name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  tests:
    name: Tests

    runs-on: ubuntu-latest

    steps:

      - uses: actions/checkout@v2

      - name: Validate composer.json and composer.lock
        run: composer validate
      
      - name: Get Composer Cache Directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache Composer Downloads
        uses: actions/cache@v2
        with:
          path: vendor/
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
        
      - name: Cache PHP dependencies
        uses: actions/cache@v2
        with:
          path: vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
      
      - name: Install composer
        uses: php-actions/composer@v1
        with:
          php_version: 7.4
          composer_version: 1
      
           
      - name: Installs phpstan latest version
        uses: php-actions/phpstan@17-php-versions
        with:
          configuration: phpstan.neon

      - name: Runs phpstan tests
        run: vendor/bin/phpstan --no-interaction --no-progress analyse --configuration='phpstan.neon' --level 8 src/
      
      - name: Installs phpunit latest version
        uses: php-actions/phpunit@17-php-versions
        with:
          bootstrap: vendor/autoload.php
          configuration: tests/phpunit.xml.dist

      - name: Runs phpunit tests
        run: php bin/phpunit --configuration 'tests/phpunit.xml.dist' --bootstrap 'vendor/autoload.php' --test-suffix 'Test.php,.phpt' tests
