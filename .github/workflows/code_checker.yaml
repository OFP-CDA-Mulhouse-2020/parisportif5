# This is a basic workflow
name: code_checker

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  
  code-check-tests:
    name: Tests de conformit√© du code

    runs-on: ubuntu-18.04

    steps:

      - name: Checkout project
        uses: actions/checkout@v2

      - name: Install composer
        uses: php-actions/composer@v1

      - name: Install php_codesniffer
        uses: hrysd/action-php_codesniffer@v1
        with:
          standard: PSR12
          target_directory: src
          github_token: ${{ secrets.github_token }}
          
      - name: Run php_codesniffer
        run: ./vendor/bin/phpcs src --extensions=php --ignore=src/Kernel.php --report=code --colors --report-width=80 --standard=PSR12
        
  syntax-tests:
    name: Tests de syntaxe

    runs-on: ubuntu-18.04

    steps:

      - name: Checkout project
        uses: actions/checkout@v2

      - name: Install composer
        uses: php-actions/composer@v1
        
      - name: PHPStan
        uses: chindit/actions-phpstan@master
        with:
          # Arguments to add to PHPStan
          arguments: '-c phpstan.neon.dist --no-interaction --no-progress'

  unit-tests:
    name: Tests unitaires

    # The type of runner that the job will run on
    runs-on: ubuntu-18.04

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout project
        uses: actions/checkout@v2

      - name: Install composer
        uses: php-actions/composer@v1

      - name: Installs phpunit latest version
        uses: php-actions/phpunit@17-php-versions
        with:
          bootstrap: vendor/autoload.php
          configuration: phpunit.xml.dist
          php_version: 7.4
          version: 8.3
          memory_limit: 2G

      - name: Runs phpunit tests
        run: php bin/phpunit --configuration 'phpunit.xml.dist' --bootstrap 'vendor/autoload.php' --test-suffix 'Test.php,.phpt' tests
