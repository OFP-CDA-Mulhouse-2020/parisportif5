@startuml parisportif5
'Relations :
    User "1" -- "1" Wallet
    User "1" -- "1" Cart
    User "1" -- "1" Account
    'Account "1" -- "1" AccountStatus
    User "1" -- "1" BillingHistory
    BillingHistory "1" o-- "0..*" Billing
    'Payment "1" -- "1" Currency
    Cart "0..*" o--> "0..*" Bet
    Bet "0..1" --> "1" Payment
    Bet "1" -- "1" Odds
    BetCategory "0..*" <--o "0..*" Competition
    Sport "1..*" <--* "0..*" Competition
    Country "1..*" <--* "0..*" Competition
    Wallet "0..1" o--> "0..*" Payment
    'Payment "1" -- "1" Amount
    Competition "1" o-- "0..*" Event
    Event "1" o-- "0..*" Run
    'Run "1" -- "1" RunStatus
    Run "0..*" 0--> "1" Location
    Team "1" 0-- "0..*" Result
    Period "0..1" -- "1" Result
    Player "1" -- "0..1" Score
    Location "0..1" --> "1" TimeZone
    'Location "1" -- "1" DateTime
    Run "1" *-- "1..*" Period
    Run "0..1" *--> "1..*" Team
    Team "1" o-- "0..*" Player
    'Team "1" -- "1" TeamStatus
    'Player "1" -- "1" PlayerStatus
    Country "1" <--* "0..1" Team
    Competition "0..1" o--> "0..*" Team
    Event "0..1" o--> "0..*" Team
    Score "1" <-- "0..1" Team
    Player "0..1" -- "1" Result
    Value "1" -- "1..*" Odds
    Value "1" -- "1..*" Team
    Value "1" -- "1..*" Player
    Sport "0..1" --> "1" Country
    Event "0..1" *--> "1..*" Sport
    Team "0..*" --> "1" Sport
    Player "0..*" *--> "1..*" Sport
    Player "0..*" *--> "1..*" Country
    User "0..*" *--> "1" Country
    Location "0..*" --> "1" Country
    TimeZone "1..*" <--* "1..*" Country
    BetCategory "1" <-- "0..*" Bet
    Player "0..*" <--o "0..*" Run
    BetHistory "1" -- "1" User
    BetHistory "0..1" o--> "0..*" Bet
'Définitions des classes :
    'Historique des paris gagnés ou perdus
    class BetHistory {
        #identifier
    }
    'Catégorie de paris (ex: Paris sur la victoire du favoris)
    class BetCategory {
        #identifier
    }
    'Utilisateur avec un compte
    class User {
        #identifier
        #gender
        #username
        #name
        #firstName
        #postAddress
        #postCode
        #country
        #birthDate
        #emailAddress
        #mobile
        #account
    }
    'Porte-feuille de l'utilisateur avec des fonds (de l'argent gagnés)
    class Wallet {
        #identifier
        #payments
    }
    'Une devise monétaire (Euros)
    'class Currency {
    '    #identifier
    '    #value
    '    #symbol
    '    #name
    '}
    'Panier qui contient les paris sélectionnés
    class Cart {
        #identifier
        #bets
    }
    'Un paris
    class Bet {
        #identifier
    }
    'La cote du paris
    class Odds {
        #identifier
    }
    'Quantité de monnaie
    'class Amount
    'Un paiement (crédit ou débit)
    class Payment {
        #identifier
        #currency
        #amount
    }
    'Factures
    class Billing {
        #identifier
        #orderNumber
        #payment
    }
    'Historique des factures
    class BillingHistory {
        #identifier
    }
    'Classe mère global : Historique de quelque chose (Historique des factures)
    'class History
    'Lieu de la rencontre/course
    class Location {
        #identifier
        #country
        #datetime
        #timezoneLocal
    }
    'Sport pratiqué
    class Sport {
        #identifier
    }
    'Pays du lieu de la rencontre/course
    class Country {
        #identifier
        #dateFormat
        #timeFormat
        #summerTime
        #timezoneDefault
    }
    'Compétition (JO,Ligue des Champions,F1 Championnat du monde)
    class Competition {
        #identifier
    }
    'Événement de la compétition (poul de qualification, Circuit F1 de france)
    class Event {
        #identifier
    }
    'Course
    'class Race
    'Rencontre
    'class Fixture
    'Date et heure du lieu
    'class DateTime
    'Fuseau horraire du lieu
    class TimeZone {
        #identifier
        #timeZone
        #utcOffset
    }
    'Période du match (2*mi-teamps), de la course (1*parcour)
    class Period {
        #identifier
    }
    'Classe représentant les données servant à calculé la cote de source inconnu
    class Score {
        #identifier
    }
    'Résultat du match, de la course
    class Result {
        #identifier
    }
    'Classe mère global : Status de quelque chose (Status du joueur)
    class Status
    'Status du joueur (blessé, remplaçant)
    'class PlayerStatus
    'Compte de l'utilisateur (blessé, remplaçant)
    class Account {
        #identifier
        #User
        #validation
        #state
        -password
    }
    'Status du compte (actif, invalid, valid)
    'class AccountStatus
    'Joueur ou sportif ou pilote
    class Player {
        #identifier
    }
    'Équipes qui participe à une rencontre, à une course
    class Team {
        #identifier
    }
    'Statut de l'équipe ()
    'class TeamStatus
    'Classe mère global : Un match, une rencontre, une course
    class Run {
        #identifier
    }
    'Statut du match, de la rencontre, de la course (annulé, reporté, en cours)
    'class RunStatus
    '
    class Value {
        #identifier
    }
    class Log
@enduml